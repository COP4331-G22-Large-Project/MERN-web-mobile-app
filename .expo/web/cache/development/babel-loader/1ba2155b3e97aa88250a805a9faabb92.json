{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport useTheme from \"../../../utils/useTheme\";\nexport default function HeaderTitle(_ref) {\n  var tintColor = _ref.tintColor,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, [\"tintColor\", \"style\"]);\n\n  var _useTheme = useTheme(),\n      colors = _useTheme.colors;\n\n  return React.createElement(Animated.Text, _extends({\n    accessibilityRole: \"header\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.title, {\n      color: tintColor === undefined ? colors.text : tintColor\n    }, style]\n  }));\n}\nvar styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600'\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal'\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500'\n    }\n  })\n});","map":{"version":3,"sources":["HeaderTitle.tsx"],"names":["style","rest","colors","useTheme","styles","color","tintColor","title","ios","fontSize","fontWeight","android","fontFamily","default"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAP,KAAA,MAAA,OAAA;;;;AAEA,OAAA,QAAA;AAOA,eAAe,SAAA,WAAA,CAAA,IAAA,EAA2D;AAAA,MAAtC,SAAsC,GAAA,IAAA,CAAtC,SAAsC;AAAA,MAAzBA,KAAyB,GAAA,IAAA,CAAzBA,KAAyB;AAAA,MAAfC,IAAe,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,WAAA,EAAA,OAAA,CAAA,CAAA;;AAAA,kBACrDE,QAAnB,EADwE;AAAA,MAChED,MADgE,aAChEA,MADgE;;AAGxE,SACE,KAAA,CAAA,aAAA,CAAC,QAAD,CAAA,IAAA,EAAA,QAAA,CAAA;AACE,IAAA,iBAAiB,EADnB,QAAA;AAEE,IAAA,aAAa,EAAE;AAFjB,GAAA,EAAA,IAAA,EAAA;AAIE,IAAA,KAAK,EAAE,CACLE,MAAM,CADD,KAAA,EAEL;AAAEC,MAAAA,KAAK,EAAEC,SAAS,KAATA,SAAAA,GAA0BJ,MAAM,CAAhCI,IAAAA,GAAwCA;AAAjD,KAFK,EAAA,KAAA;AAJT,GAAA,CAAA,CADF;AAYD;AAED,IAAMF,MAAM,GAAG,UAAU,CAAV,MAAA,CAAkB;AAC/BG,EAAAA,KAAK,EAAE,QAAQ,CAAR,MAAA,CAAgB;AACrBC,IAAAA,GAAG,EAAE;AACHC,MAAAA,QAAQ,EADL,EAAA;AAEHC,MAAAA,UAAU,EAAE;AAFT,KADgB;AAKrBC,IAAAA,OAAO,EAAE;AACPF,MAAAA,QAAQ,EADD,EAAA;AAEPG,MAAAA,UAAU,EAFH,mBAAA;AAGPF,MAAAA,UAAU,EAAE;AAHL,KALY;AAUrBG,IAAAA,OAAO,EAAE;AACPJ,MAAAA,QAAQ,EADD,EAAA;AAEPC,MAAAA,UAAU,EAAE;AAFL;AAVY,GAAhB;AADwB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, Platform } from 'react-native';\nimport useTheme from '../../../utils/useTheme';\n\ntype Props = Omit<React.ComponentProps<typeof Animated.Text>, 'key'> & {\n  tintColor?: string;\n  children?: string;\n};\n\nexport default function HeaderTitle({ tintColor, style, ...rest }: Props) {\n  const { colors } = useTheme();\n\n  return (\n    <Animated.Text\n      accessibilityRole=\"header\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.title,\n        { color: tintColor === undefined ? colors.text : tintColor },\n        style,\n      ]}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  title: Platform.select({\n    ios: {\n      fontSize: 17,\n      fontWeight: '600',\n    },\n    android: {\n      fontSize: 20,\n      fontFamily: 'sans-serif-medium',\n      fontWeight: 'normal',\n    },\n    default: {\n      fontSize: 18,\n      fontWeight: '500',\n    },\n  }),\n});\n"]},"metadata":{},"sourceType":"module"}