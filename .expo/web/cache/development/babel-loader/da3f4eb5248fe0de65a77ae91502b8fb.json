{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport RCTEventEmitter from 'react-native-web/dist/vendor/react-native/emitter/EventEmitter';\nimport RCTDeviceEventEmitter from 'react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter';\n\nvar SyntheticPlatformEmitter = function () {\n  function SyntheticPlatformEmitter() {\n    _classCallCheck(this, SyntheticPlatformEmitter);\n\n    this._emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n  }\n\n  _createClass(SyntheticPlatformEmitter, [{\n    key: \"emit\",\n    value: function emit(eventName, props) {\n      this._emitter.emit(eventName, props);\n    }\n  }]);\n\n  return SyntheticPlatformEmitter;\n}();\n\nexport default new SyntheticPlatformEmitter();","map":{"version":3,"sources":["emitter-polyfill.ts"],"names":["SyntheticPlatformEmitter","_emitter","RCTDeviceEventEmitter","eventName","props"],"mappings":";;AAIA,OAAA,eAAA,MAAA,gEAAA;AAEA,OAAA,qBAAA,MAAA,oFAAA;;AAMMA,IAAAA,wB;;;;SACJC,Q,GAAW,IAAA,eAAA,CAAoBC,qBAAqB,CAAzC,gBAAA,C;;;;;yBAENC,S,EAAmBC,K,EAAkB;AACxC,WAAA,QAAA,CAAA,IAAA,CAAA,SAAA,EAAA,KAAA;;;;;GAJEJ;;AAQN,eAAe,IAAf,wBAAe,EAAf","sourcesContent":["// Copyright 2018-present 650 Industries. All rights reserved.\n// Polyfill the @unimodules/react-native-adapter used for Expo web.\n\n// @ts-ignore: react-native-web is a peer dependency\nimport RCTEventEmitter from 'react-native-web/dist/vendor/react-native/emitter/EventEmitter';\n// @ts-ignore: react-native-web is a peer dependency\nimport RCTDeviceEventEmitter from 'react-native-web/dist/vendor/react-native/NativeEventEmitter/RCTDeviceEventEmitter';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new RCTEventEmitter(RCTDeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"]},"metadata":{},"sourceType":"module"}