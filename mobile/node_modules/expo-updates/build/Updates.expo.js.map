{"version":3,"file":"Updates.expo.js","sourceRoot":"","sources":["../src/Updates.expo.ts"],"names":[],"mappings":"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","sourcesContent":["import { RCTDeviceEventEmitter, UnavailabilityError } from '@unimodules/core';\nimport Constants from 'expo-constants';\nimport * as FileSystem from 'expo-file-system';\nimport { EventEmitter, EventSubscription } from 'fbemitter';\nimport { Platform } from 'react-native';\n\nimport ExponentUpdates from './ExponentUpdates';\nimport {\n  Listener,\n  LocalAssets,\n  Manifest,\n  UpdateCheckResult,\n  UpdateEvent,\n  UpdateEventType,\n  UpdateFetchResult,\n} from './Updates.types';\n\nexport * from './Updates.types';\n\nexport const localAssets: LocalAssets = {};\nexport const manifest: Manifest | object = Constants.manifest ?? {};\nexport const updateId: string | null = manifest.hasOwnProperty('releaseId')\n  ? (manifest as Manifest & { releaseId: string }).releaseId.toLowerCase()\n  : null;\nexport const releaseChannel: string = manifest.hasOwnProperty('releaseChannel')\n  ? (manifest as Manifest & { releaseChannel: string }).releaseChannel\n  : 'default';\nexport const isEmergencyLaunch: boolean = false;\nexport const isUsingEmbeddedAssets: boolean = false;\n\nexport async function reloadAsync(): Promise<void> {\n  if (!ExponentUpdates.reloadFromCache) {\n    throw new UnavailabilityError('Updates', 'reloadAsync');\n  }\n  await ExponentUpdates.reloadFromCache();\n}\n\nexport async function checkForUpdateAsync(): Promise<UpdateCheckResult> {\n  if (!ExponentUpdates.checkForUpdateAsync) {\n    throw new UnavailabilityError('Updates', 'checkForUpdateAsync');\n  }\n  const result = await ExponentUpdates.checkForUpdateAsync();\n  if (!result) {\n    return { isAvailable: false };\n  }\n\n  return {\n    isAvailable: true,\n    manifest: typeof result === 'string' ? JSON.parse(result) : result,\n  };\n}\n\nexport async function fetchUpdateAsync(): Promise<UpdateFetchResult> {\n  if (!ExponentUpdates.fetchUpdateAsync) {\n    throw new UnavailabilityError('Updates', 'fetchUpdateAsync');\n  }\n  _isFetchingUpdate = true;\n  const result = await ExponentUpdates.fetchUpdateAsync();\n  setTimeout(() => {\n    _isFetchingUpdate = false;\n  }, 0);\n\n  if (!result) {\n    return { isNew: false };\n  }\n\n  return {\n    isNew: true,\n    manifest: typeof result === 'string' ? JSON.parse(result) : result,\n  };\n}\n\n// Legacy- Remove in SDK 39\nexport async function clearUpdateCacheExperimentalAsync(\n  sdkVersion?: string\n): Promise<{ success: boolean; errors: string[] }> {\n  let errors: string[] = [];\n  if (Platform.OS !== 'android') {\n    errors.push('This method is only supported on Android.');\n    return { success: false, errors };\n  }\n\n  if (Constants.manifest && FileSystem.documentDirectory) {\n    const sdkBundlesPath =\n      FileSystem.documentDirectory + sdkVersion ?? Constants.manifest.sdkVersion;\n    const sdkBundleFiles = await FileSystem.readDirectoryAsync(sdkBundlesPath);\n\n    const results = await Promise.all(\n      sdkBundleFiles.map(async filename => {\n        let fullpath = sdkBundlesPath + '/' + filename;\n        // In java, we use `getPath`, which decodes, so we need to double-encode these values\n        fullpath = fullpath.replace('%40', '%2540').replace('%2F', '%252F');\n\n        const bundleUrlStringHashcode = hashCode(Constants.manifest.bundleUrl);\n        const isCurrentlyRunningBundle = filename.includes(bundleUrlStringHashcode);\n        if (!isCurrentlyRunningBundle) {\n          try {\n            await FileSystem.deleteAsync(fullpath);\n            return 'success';\n          } catch (e) {\n            return e.message;\n          }\n        }\n      })\n    );\n    errors = errors.concat(results.filter(v => v !== 'success'));\n    if (!errors.length) {\n      return { success: true, errors: [] };\n    }\n  } else {\n    errors.push('This method is only available in standalone apps.');\n  }\n\n  return { success: false, errors };\n}\n\nfunction hashCode(string: string): string {\n  const length = string.length;\n  let hash = 0,\n    i = 0;\n  if (length > 0) {\n    while (i < length) {\n      hash = ((hash << 5) - hash + string.charCodeAt(i++)) | 0;\n    }\n  }\n  return hash.toString();\n}\n\nlet _emitter: EventEmitter | null;\nlet _isFetchingUpdate = false;\n\nfunction _getEmitter(): EventEmitter {\n  if (!_emitter) {\n    _emitter = new EventEmitter();\n    RCTDeviceEventEmitter.addListener('Exponent.nativeUpdatesEvent', _emitEvent);\n  }\n  return _emitter;\n}\n\nfunction _emitEvent(params): void {\n  // The legacy implementation emits additional events during the `fetchUpdateAsync` call. Since the\n  // new implementation does not do this, we should ignore these events.\n  if (_isFetchingUpdate) {\n    return;\n  }\n\n  let newParams = params;\n  if (typeof params === 'string') {\n    newParams = JSON.parse(params);\n  }\n  if (newParams.manifestString) {\n    newParams.manifest = JSON.parse(newParams.manifestString);\n    delete newParams.manifestString;\n  }\n\n  // transform legacy event types\n  if (\n    newParams.type === LegacyUpdatesEventType.DOWNLOAD_STARTED ||\n    newParams.type === LegacyUpdatesEventType.DOWNLOAD_PROGRESS\n  ) {\n    return;\n  } else if (newParams.type === LegacyUpdatesEventType.DOWNLOAD_FINISHED) {\n    newParams.type = UpdateEventType.UPDATE_AVAILABLE;\n  }\n\n  if (!_emitter) {\n    throw new Error(`EventEmitter must be initialized to use from its listener`);\n  }\n  _emitter.emit('Expo.updatesEvent', newParams);\n}\n\nexport function addListener(listener: Listener<UpdateEvent>): EventSubscription {\n  const emitter = _getEmitter();\n  return emitter.addListener('Expo.updatesEvent', listener);\n}\n\nenum LegacyUpdatesEventType {\n  DOWNLOAD_STARTED = 'downloadStart',\n  DOWNLOAD_PROGRESS = 'downloadProgress',\n  DOWNLOAD_FINISHED = 'downloadFinished',\n  NO_UPDATE_AVAILABLE = 'noUpdateAvailable',\n  ERROR = 'error',\n}\n"]}